{"name":"Jetty JTA EntityManager Spring JNDI","tagline":"Jetty JTA EntityManager Spring JNDI MySQL ","body":"### Configuring Jetty With JTA EntityManager Spring JNDI\r\nIn this post I'll demonstrate how to create dataSource,tx,TxManager expose them via JNDI and inject them into the Spring Context.\r\n\r\nStarting with Jetty 7, Jetty has become a project of Eclipse Foundation. During the migration of Jetty 6 to Eclipse Jetty 7 a new package structure has been adopted (see the Jetty 7 Refactoring page):\r\n\r\nClasses from org.mortbay.jetty.webapp are now in org.eclipse.jetty.webapp\r\nClasses from org.mortbay.jetty.plus.naming are now in org.eclipse.jetty.plus.jndi\r\n\r\n\r\n```\r\npom.xml\r\n\t<!-- JTA JETTY JNDI -->\r\n\t\t<!-- Atomikos -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.atomikos</groupId>\r\n\t\t\t<artifactId>transactions</artifactId>\r\n\t\t\t<version>${atomikos.version}</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.atomikos</groupId>\r\n\t\t\t<artifactId>transactions-jta</artifactId>\r\n\t\t\t<version>${atomikos.version}</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.atomikos</groupId>\r\n\t\t\t<artifactId>transactions-jdbc</artifactId>\r\n\t\t\t<version>${atomikos.version}</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.atomikos</groupId>\r\n\t\t\t<artifactId>transactions-hibernate3</artifactId>\r\n\t\t\t<version>${atomikos.version}</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.atomikos</groupId>\r\n\t\t\t<artifactId>atomikos-util</artifactId>\r\n\t\t\t<version>${atomikos.version}</version>\r\n\t\t</dependency>\r\n\t\t<!-- JTA  -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>javax.transaction</groupId>\r\n\t\t\t<artifactId>jta</artifactId>\r\n\t\t\t<version>1.1</version>\r\n\r\n\r\nWEB-INF\\jetty-env.xml\r\n\r\n<!-- Configura o contexto da aplicação web -->\r\n<Configure id=\"Server\" class=\"org.eclipse.jetty.webapp.WebAppContext\">\r\n\r\n\t<New id=\"jdbc/myds\" class=\"org.eclipse.jetty.plus.jndi.Resource\">\r\n\t\t<Arg></Arg>\r\n\t\t<Arg>jdbc/myds</Arg>\r\n\t\t<Arg>\r\n\t\t\t<New class=\"com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolDataSource\">\r\n\t\t\t\t<Set name=\"Url\">jdbc:mysql://localhost:3306/econdate</Set>\r\n\t\t\t\t<Set name=\"User\">root</Set>\r\n\t\t\t\t<Set name=\"Password\"></Set>\r\n\t\t\t</New>\r\n\t\t</Arg>\r\n\t\t<Call name=\"bindToENC\">\r\n\t\t\t<Arg>jdbc/myfoo</Arg>  <!-- binds jdbc/myds to java:comp/env/jdbc/myfoo for this webapp -->\r\n\t\t</Call>\r\n\t</New>\r\n\r\n\t<New id=\"tx\" class=\"org.eclipse.jetty.plus.jndi.Transaction\">\r\n\t\t<Arg>\r\n\t\t\t<New class=\"com.atomikos.icatch.jta.UserTransactionImp\" />\r\n\t\t</Arg>\r\n\t</New>\r\n\r\n\t<New id=\"txManager\" class=\"org.eclipse.jetty.plus.jndi.Transaction\">\r\n\t\t<Arg>\r\n\t\t\t<New class=\"com.atomikos.icatch.jta.UserTransactionManager\" />\r\n\t\t</Arg>\r\n\t</New>\r\n\r\n</Configure>\r\n```\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}